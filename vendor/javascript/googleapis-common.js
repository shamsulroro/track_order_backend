import*as e from"google-auth-library";import*as t from"gaxios";import r from"./apiIndex.js";import*as o from"qs";import*as s from"stream";import*as n from"url-template";import*as a from"uuid";import*as i from"extend";import*as c from"http2";import*as u from"zlib";import*as l from"url";import*as p from"util";import*as d from"process";import f from"process";import*as m from"gaxios/build/src/common";import y from"buffer";import h from"./authplus.js";import*as g from"fs";var b={};Object.defineProperty(b,"__esModule",{value:true});b.isBrowser=void 0;function isBrowser(){return"undefined"!==typeof window}b.isBrowser=isBrowser;var v="default"in c?c.default:c;var P="default"in u?u.default:u;var A="default"in l?l.default:l;var j="default"in o?o.default:o;var E="default"in i?i.default:i;var w="default"in s?s.default:s;var T="default"in p?p.default:p;var O="default"in d?d.default:d;var x="default"in m?m.default:m;var q={};var R=y.Buffer;Object.defineProperty(q,"__esModule",{value:true});q.closeSession=q.request=q.sessions=void 0;const C=v;const _=P;const k=A;const S=j;const U=E;const $=w;const I=T;const D=O;const G=x;const{HTTP2_HEADER_CONTENT_ENCODING:H,HTTP2_HEADER_CONTENT_TYPE:M,HTTP2_HEADER_METHOD:B,HTTP2_HEADER_PATH:N,HTTP2_HEADER_STATUS:z}=C.constants;const J=!!D.env.HTTP2_DEBUG;q.sessions={};
/**
 * Public method to make an http2 request.
 * @param config - Request options.
 */async function request(e){const t=U(true,{},e);t.validateStatus=t.validateStatus||validateStatus;t.responseType=t.responseType||"json";const r=new k.URL(t.url);const o=_getClient(r.host);void 0!==o.timeoutHandle&&clearTimeout(o.timeoutHandle);let s=r.pathname;if(e.params&&Object.keys(e.params).length>0){const r=e.paramsSerializer||S.stringify;const o=r(t.params);s+=`?${o}`}const n=Object.assign({},t.headers,{[N]:s,[B]:e.method||"GET"});n[M]||"text"!==t.responseType&&(n[M]="application/json");const a={config:e,request:{},headers:[],status:0,data:{},statusText:""};const i=[];const c=o.session;let u;return new Promise(((s,l)=>{try{u=c.request(n).on("response",(e=>{a.headers=e;a.status=Number(e[z]);let r=u;"gzip"===e[H]&&(r=u.pipe(_.createGunzip()));if("stream"!==t.responseType)r.on("data",(e=>{i.push(e)})).on("error",(e=>{l(e)})).on("end",(()=>{const e=R.concat(i);let r=e;if(e){if("json"===t.responseType)try{r=JSON.parse(e.toString("utf8"))}catch(t){r=e.toString("utf8")}else"text"===t.responseType?r=e.toString("utf8"):"arraybuffer"===t.responseType&&(r=e.buffer);a.data=r}if(!t.validateStatus(a.status)){let e=`Request failed with status code ${a.status}. `;if(a.data&&"object"===typeof a.data){const t=I.inspect(a.data,{depth:5});e=`${e}\n'${t}`}l(new G.GaxiosError(e,t,a))}s(a)}));else{a.data=r;s(a)}})).on("error",(e=>{l(e)}))}catch(e){closeSession(r);l(e)}a.request=u;if(e.data)if(e.data instanceof $.Stream)e.data.pipe(u);else if("string"===typeof e.data){const t=R.from(e.data);u.end(t)}else if("object"===typeof e.data){const t=JSON.stringify(e.data);u.end(t)}o.timeoutHandle=setTimeout((()=>{closeSession(r)}),500)}))}q.request=request;
/**
 * By default, throw for any non-2xx status code
 * @param status - status code from the HTTP response
 */function validateStatus(e){return e>=200&&e<300}
/**
 * Obtain an existing h2 session or go create a new one.
 * @param host - The hostname to which the session belongs.
 */function _getClient(e){if(q.sessions[e])J&&console.log(`Used cached client for ${e}`);else{J&&console.log(`Creating client for ${e}`);const t=C.connect(`https://${e}`);t.on("error",(t=>{console.error(`*ERROR*: ${t}`);delete q.sessions[e]})).on("goaway",((t,r)=>{console.error(`*GOAWAY*: ${t} : ${r}`);delete q.sessions[e]}));q.sessions[e]={session:t}}return q.sessions[e]}async function closeSession(e){const t=q.sessions[e.host];if(!t)return;const{session:r}=t;delete q.sessions[e.host];J&&console.error(`Closing ${e.host}`);r.close((()=>{J&&console.error(`Closed ${e.host}`)}));setTimeout((()=>{if(r&&!r.destroyed){J&&console.log(`Forcing close ${e.host}`);r&&r.destroy()}}),1e3)}q.closeSession=closeSession;var F={name:"googleapis-common",version:"6.0.4",description:"A common tooling library used by the googleapis npm module. You probably don't want to use this directly.",repository:"googleapis/nodejs-googleapis-common",main:"build/src/index.js",types:"build/src/index.d.ts",files:["build/src","!build/src/**/*.map"],scripts:{prebenchmark:"npm run compile",benchmark:"node build/benchmark/bench.js",compile:"tsc -p .",test:"c8 mocha build/test","system-test":"c8 mocha build/system-test --timeout 600000","presystem-test":"npm run compile",fix:"gts fix",prepare:"npm run compile",pretest:"npm run compile",lint:"gts check","samples-test":"mocha build/samples-test",docs:"compodoc src/","docs-test":"linkinator docs",webpack:"webpack","browser-test":"karma start","predocs-test":"npm run docs",prelint:"cd samples; npm link ../; npm install",clean:"gts clean",precompile:"gts clean"},keywords:[],author:"Google LLC",license:"Apache-2.0",dependencies:{extend:"^3.0.2",gaxios:"^5.0.1","google-auth-library":"^8.0.2",qs:"^6.7.0","url-template":"^2.0.8",uuid:"^9.0.0"},devDependencies:{"@compodoc/compodoc":"^1.1.9","@types/execa":"^0.9.0","@types/extend":"^3.0.1","@types/mocha":"^9.0.0","@types/mv":"^2.1.0","@types/ncp":"^2.0.1","@types/nock":"^10.0.3","@types/proxyquire":"^1.3.28","@types/qs":"^6.5.3","@types/sinon":"^10.0.0","@types/tmp":"0.2.3","@types/url-template":"^2.0.28","@types/uuid":"^8.0.0",c8:"^7.0.0",codecov:"^3.5.0",execa:"^5.0.0",gts:"^3.1.0",http2spy:"^2.0.0","is-docker":"^2.0.0",karma:"^6.0.0","karma-chrome-launcher":"^3.0.0","karma-coverage":"^2.0.0","karma-firefox-launcher":"^2.0.0","karma-mocha":"^2.0.0","karma-remap-coverage":"^0.1.5","karma-sourcemap-loader":"^0.3.7","karma-webpack":"^5.0.0",linkinator:"^3.1.0",mocha:"^9.2.2",mv:"^2.1.1",ncp:"^2.0.0",nock:"^13.0.0","null-loader":"^4.0.0",proxyquire:"^2.1.3",puppeteer:"^18.2.1",sinon:"^14.0.0",tmp:"^0.2.0","ts-loader":"^8.0.0",typescript:"^4.6.4",webpack:"^5.30.0","webpack-cli":"^4.0.0"},engines:{node:">=12.0.0"}};var L="default"in e?e.default:e;var W="default"in o?o.default:o;var Y="default"in s?s.default:s;var X="default"in n?n.default:n;var K="default"in a?a.default:a;var Q="default"in i?i.default:i;var V={};var Z=f;Object.defineProperty(V,"__esModule",{value:true});V.createAPIRequest=void 0;const ee=L;const te=W;const re=Y;const oe=X;const se=K;const ne=Q;const ae=b;const ie=q;const ce=F;function isReadableStream(e){return null!==e&&"object"===typeof e&&"function"===typeof e.pipe&&false!==e.readable&&"function"===typeof e._read&&"object"===typeof e._readableState}function getMissingParams(e,t){const r=new Array;t.forEach((t=>{void 0===e[t]&&r.push(t)}));return r.length>0?r:null}function createAPIRequest$1(e,t){if(!t)return createAPIRequestAsync(e);createAPIRequestAsync(e).then((e=>t(null,e)),t)}V.createAPIRequest=createAPIRequest$1;async function createAPIRequestAsync(e){var t;const r=ne(true,{},(null===(t=e.context.google)||void 0===t?void 0:t._options)||{},e.context._options||{},e.options);const o=ne(true,{},r.params,e.params);r.userAgentDirectives=r.userAgentDirectives||[];const s=o.media||{};let n=o.requestBody;if(!o.requestBody&&o.resource&&(!e.requiredParams.includes("resource")||"string"!==typeof o.resource)){n=o.resource;delete o.resource}delete o.requestBody;let a=o.auth||r.auth;const i="string"===typeof s.body?"text/plain":"application/octet-stream";delete o.media;delete o.auth;const c=o.headers||{};populateAPIHeader(c);delete o.headers;Object.keys(o).forEach((e=>{if("_"===e.slice(-1)){const t=e.slice(0,-1);o[t]=o[e];delete o[e]}}));const u=getMissingParams(o,e.requiredParams);if(u)throw new Error("Missing required parameters: "+u.join(", "));r.url&&(r.url=oe.parse(r.url).expand(o));e.mediaUrl&&(e.mediaUrl=oe.parse(e.mediaUrl).expand(o));if(void 0!==e.context._options.rootUrl&&void 0!==r.url){const t=new URL(r.url);const o=t.href.substr(t.origin.length);r.url=new URL(o,e.context._options.rootUrl).href}r.paramsSerializer=e=>te.stringify(e,{arrayFormat:"repeat"});e.pathParams.forEach((e=>delete o[e]));if("string"===typeof a){o.key=o.key||a;a=void 0}function multipartUpload(e){const t=se.v4();const o=`--${t}--`;const s=new re.PassThrough({flush(e){this.push("\r\n");this.push(o);e()}});const n=new ProgressStream;const a=isReadableStream(e[1].body);c["content-type"]=`multipart/related; boundary=${t}`;for(const o of e){const e=`--${t}\r\ncontent-type: ${o["content-type"]}\r\n\r\n`;s.push(e);if("string"===typeof o.body){s.push(o.body);s.push("\r\n")}else{n.on("progress",(e=>{r.onUploadProgress&&r.onUploadProgress({bytesRead:e})}));o.body.pipe(n).pipe(s)}}if(!a){s.push(o);s.push(null)}r.data=s}function browserMultipartUpload(e){const t=se.v4();const o=`--${t}--`;c["content-type"]=`multipart/related; boundary=${t}`;let s="";for(const r of e){const e=`--${t}\r\ncontent-type: ${r["content-type"]}\r\n\r\n`;s+=e;if("string"===typeof r.body){s+=r.body;s+="\r\n"}}s+=o;r.data=s}if(e.mediaUrl&&s.body){r.url=e.mediaUrl;if(n){o.uploadType="multipart";const e=[{"content-type":"application/json",body:JSON.stringify(n)},{"content-type":s.mimeType||n&&n.mimeType||i,body:s.body}];(0,ae.isBrowser)()?browserMultipartUpload(e):multipartUpload(e)}else{o.uploadType="media";Object.assign(c,{"content-type":s.mimeType||i});r.data=s.body}}else r.data=n||void 0;r.headers=ne(true,r.headers||{},c);r.params=o;if(!(0,ae.isBrowser)()){r.headers["Accept-Encoding"]="gzip";r.userAgentDirectives.push({product:"google-api-nodejs-client",version:ce.version,comment:"gzip"});const e=r.userAgentDirectives.map((e=>{let t=`${e.product}/${e.version}`;e.comment&&(t+=` (${e.comment})`);return t})).join(" ");r.headers["User-Agent"]=e}r.validateStatus||(r.validateStatus=e=>e>=200&&e<300||304===e);r.retry=void 0===r.retry||r.retry;delete r.auth;if(a&&"object"===typeof a){if(r.http2){const e=await a.getRequestHeaders(r.url);const t=Object.assign({},r);t.headers=Object.assign(t.headers,e);return ie.request(t)}return a.request(r)}return(new ee.DefaultTransporter).request(r)}class ProgressStream extends re.Transform{constructor(){super(...arguments);this.bytesRead=0}_transform(e,t,r){this.bytesRead+=e.length;this.emit("progress",this.bytesRead);this.push(e);r()}}function populateAPIHeader(e){(0,ae.isBrowser)()||(e["x-goog-api-client"]=`gdcl/${ce.version} gl-node/${Z.versions.node}`)}var ue={};Object.defineProperty(ue,"__esModule",{value:true});ue.Endpoint=void 0;const le=V;class Endpoint$1{constructor(e){this._options=e||{}}
/**
   * Given a schema, add methods and resources to a target.
   *
   * @param {object} target The target to which to apply the schema.
   * @param {object} rootSchema The top-level schema, so we don't lose track of it
   * during recursion.
   * @param {object} schema The current schema from which to extract methods and
   * resources.
   * @param {object} context The context to add to each method.
   */applySchema(e,t,r,o){this.applyMethodsFromSchema(e,t,r,o);if(r.resources)for(const s in r.resources)if(Object.prototype.hasOwnProperty.call(r.resources,s)){const n=r.resources[s];e[s]||(e[s]={});this.applySchema(e[s],t,n,o)}}
/**
   * Given a schema, add methods to a target.
   *
   * @param {object} target The target to which to apply the methods.
   * @param {object} rootSchema The top-level schema, so we don't lose track of it
   * during recursion.
   * @param {object} schema The current schema from which to extract methods.
   * @param {object} context The context to add to each method.
   */applyMethodsFromSchema(e,t,r,o){if(r.methods)for(const s in r.methods)if(Object.prototype.hasOwnProperty.call(r.methods,s)){const n=r.methods[s];e[s]=this.makeMethod(t,n,o)}}
/**
   * Given a method schema, add a method to a target.
   *
   * @param target The target to which to add the method.
   * @param schema The top-level schema that contains the rootUrl, etc.
   * @param method The method schema from which to generate the method.
   * @param context The context to add to the method.
   */makeMethod(e,t,r){return(o,s)=>{const n="function"===typeof o?{}:o;s="function"===typeof o?o:s;const a=buildurl(e.rootUrl+e.servicePath+t.path);const i={options:{url:a.substring(1,a.length-1),method:t.httpMethod},params:n,requiredParams:t.parameterOrder||[],pathParams:this.getPathParams(t.parameters),context:r};if(t.mediaUpload&&t.mediaUpload.protocols&&t.mediaUpload.protocols.simple&&t.mediaUpload.protocols.simple.path){const r=buildurl(e.rootUrl+t.mediaUpload.protocols.simple.path);i.mediaUrl=r.substring(1,r.length-1)}if(!s)return(0,le.createAPIRequest)(i);(0,le.createAPIRequest)(i,s)}}getPathParams(e){const t=new Array;"object"!==typeof e&&(e={});Object.keys(e).forEach((r=>{"path"===e[r].location&&t.push(r)}));return t}}ue.Endpoint=Endpoint$1;
/**
 * Build a string used to create a URL from the discovery doc provided URL.
 * replace double slashes with single slash (except in https://)
 * @private
 * @param  input URL to build from
 * @return Resulting built URL
 */function buildurl(e){return e?`'${e}'`.replace(/([^:]\/)\/+/g,"$1"):""}var pe="default"in g?g.default:g;var de="default"in e?e.default:e;var fe="default"in l?l.default:l;var me="default"in p?p.default:p;var ye={};Object.defineProperty(ye,"__esModule",{value:true});ye.Discovery=void 0;const he=pe;const ge=de;const be=fe;const ve=me;const Pe=V;const Ae=ue;const je=ve.promisify(he.readFile);class Discovery$1{
/**
   * Discovery for discovering API endpoints
   *
   * @param options Options for discovery
   */
constructor(e){this.transporter=new ge.DefaultTransporter;this.options=e||{}}
/**
   * Generate and Endpoint from an endpoint schema object.
   *
   * @param schema The schema from which to generate the Endpoint.
   * @return A function that creates an endpoint.
   */makeEndpoint(e){return t=>{const r=new Ae.Endpoint(t);r.applySchema(r,e,e,r);return r}}log(...e){this.options&&this.options.debug&&console.log(...e)}
/**
   * Generate all APIs and return as in-memory object.
   * @param discoveryUrl
   */async discoverAllAPIs(e){const t=this.options.includePrivate?{}:{"X-User-Ip":"0.0.0.0"};const r=await this.transporter.request({url:e,headers:t});const o=r.data.items;const s=await Promise.all(o.map((async e=>{const t=await this.discoverAPI(e.discoveryRestUrl);return{api:e,endpointCreator:t}})));const n={};const a={};for(const e of s){if(!a[e.api.name]){n[e.api.name]={};a[e.api.name]=t=>{const r=typeof t;let o;if("string"===r){o=t;t={}}else{if("object"!==r)throw new Error("Argument error: Accepts only string or object");o=t.version;delete t.version}try{const r=e.endpointCreator(t,this);return Object.freeze(r)}catch(t){throw new Error(ve.format('Unable to load endpoint %s("%s"): %s',e.api.name,o,t.message))}}}n[e.api.name][e.api.version]=e.endpointCreator}return a}
/**
   * Generate API file given discovery URL
   *
   * @param apiDiscoveryUrl URL or filename of discovery doc for API
   * @returns A promise that resolves with a function that creates the endpoint
   */async discoverAPI(e){if("string"===typeof e){const t=be.parse(e);if(e&&!t.protocol){this.log("Reading from file "+e);const t=await je(e,{encoding:"utf8"});return this.makeEndpoint(JSON.parse(t))}{this.log("Requesting "+e);const t=await this.transporter.request({url:e});return this.makeEndpoint(t.data)}}{const t=e;this.log("Requesting "+t.url);const r=t.url;delete t.url;const o={options:{url:r,method:"GET"},requiredParams:[],pathParams:[],params:t,context:{google:{_options:{}},_options:{}}};const s=await(0,Pe.createAPIRequest)(o);return this.makeEndpoint(s.data)}}}ye.Discovery=Discovery$1;var Ee="default"in e?e.default:e;var we="default"in t?t.default:t;var Te={};Object.defineProperty(Te,"__esModule",{value:true});Te.Endpoint=Te.Discovery=Te.AuthPlus=Te.createAPIRequest=Te.getAPI=Te.GaxiosError=Te.Gaxios=Te.AwsClient=Te.IdentityPoolClient=Te.BaseExternalAccountClient=Te.ExternalAccountClient=Te.GoogleAuth=Te.DefaultTransporter=Te.UserRefreshClient=Te.Compute=Te.JWT=Te.OAuth2Client=void 0;var Oe=Ee;Object.defineProperty(Te,"OAuth2Client",{enumerable:true,get:function(){return Oe.OAuth2Client}});Object.defineProperty(Te,"JWT",{enumerable:true,get:function(){return Oe.JWT}});Object.defineProperty(Te,"Compute",{enumerable:true,get:function(){return Oe.Compute}});Object.defineProperty(Te,"UserRefreshClient",{enumerable:true,get:function(){return Oe.UserRefreshClient}});Object.defineProperty(Te,"DefaultTransporter",{enumerable:true,get:function(){return Oe.DefaultTransporter}});Object.defineProperty(Te,"GoogleAuth",{enumerable:true,get:function(){return Oe.GoogleAuth}});Object.defineProperty(Te,"ExternalAccountClient",{enumerable:true,get:function(){return Oe.ExternalAccountClient}});Object.defineProperty(Te,"BaseExternalAccountClient",{enumerable:true,get:function(){return Oe.BaseExternalAccountClient}});Object.defineProperty(Te,"IdentityPoolClient",{enumerable:true,get:function(){return Oe.IdentityPoolClient}});Object.defineProperty(Te,"AwsClient",{enumerable:true,get:function(){return Oe.AwsClient}});var xe=we;Object.defineProperty(Te,"Gaxios",{enumerable:true,get:function(){return xe.Gaxios}});Object.defineProperty(Te,"GaxiosError",{enumerable:true,get:function(){return xe.GaxiosError}});var qe=r;Object.defineProperty(Te,"getAPI",{enumerable:true,get:function(){return qe.getAPI}});var Re=V;Object.defineProperty(Te,"createAPIRequest",{enumerable:true,get:function(){return Re.createAPIRequest}});var Ce=h;Object.defineProperty(Te,"AuthPlus",{enumerable:true,get:function(){return Ce.AuthPlus}});var _e=ye;Object.defineProperty(Te,"Discovery",{enumerable:true,get:function(){return _e.Discovery}});var ke=ue;Object.defineProperty(Te,"Endpoint",{enumerable:true,get:function(){return ke.Endpoint}});const Se=Te.__esModule,Ue=Te.Endpoint,$e=Te.Discovery,Ie=Te.AuthPlus,De=Te.createAPIRequest,Ge=Te.getAPI,He=Te.GaxiosError,Me=Te.Gaxios,Be=Te.AwsClient,Ne=Te.IdentityPoolClient,ze=Te.BaseExternalAccountClient,Je=Te.ExternalAccountClient,Fe=Te.GoogleAuth,Le=Te.DefaultTransporter,We=Te.UserRefreshClient,Ye=Te.Compute,Xe=Te.JWT,Ke=Te.OAuth2Client;export{Ie as AuthPlus,Be as AwsClient,ze as BaseExternalAccountClient,Ye as Compute,Le as DefaultTransporter,$e as Discovery,Ue as Endpoint,Je as ExternalAccountClient,Me as Gaxios,He as GaxiosError,Fe as GoogleAuth,Ne as IdentityPoolClient,Xe as JWT,Ke as OAuth2Client,We as UserRefreshClient,Se as __esModule,De as createAPIRequest,Te as default,Ge as getAPI};

