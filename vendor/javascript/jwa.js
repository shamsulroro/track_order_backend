import r from"buffer-equal-constant-time";import e from"safe-buffer";import t from"crypto";import n from"ecdsa-sig-formatter";import i from"util";var a={};var o=r;var f=e.Buffer;var c=t;var u=n;var s=i;var S='"%s" is not a valid algorithm.\n  Supported algorithms are:\n  "HS256", "HS384", "HS512", "RS256", "RS384", "RS512", "PS256", "PS384", "PS512", "ES256", "ES384", "ES512" and "none".';var y="secret must be a string or buffer";var p="key must be a string or a buffer";var g="key must be a string, a buffer or an object";var v="function"===typeof c.createPublicKey;if(v){p+=" or a KeyObject";y+="or a KeyObject"}function checkIsPublicKey(r){if(!f.isBuffer(r)&&"string"!==typeof r){if(!v)throw typeError(p);if("object"!==typeof r)throw typeError(p);if("string"!==typeof r.type)throw typeError(p);if("string"!==typeof r.asymmetricKeyType)throw typeError(p);if("function"!==typeof r.export)throw typeError(p)}}function checkIsPrivateKey(r){if(!f.isBuffer(r)&&"string"!==typeof r&&"object"!==typeof r)throw typeError(g)}function checkIsSecretKey(r){if(!f.isBuffer(r)){if("string"===typeof r)return r;if(!v)throw typeError(y);if("object"!==typeof r)throw typeError(y);if("secret"!==r.type)throw typeError(y);if("function"!==typeof r.export)throw typeError(y)}}function fromBase64(r){return r.replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function toBase64(r){r=r.toString();var e=4-r.length%4;if(4!==e)for(var t=0;t<e;++t)r+="=";return r.replace(/\-/g,"+").replace(/_/g,"/")}function typeError(r){var e=[].slice.call(arguments,1);var t=s.format.bind(s,r).apply(null,e);return new TypeError(t)}function bufferOrString(r){return f.isBuffer(r)||"string"===typeof r}function normalizeInput(r){bufferOrString(r)||(r=JSON.stringify(r));return r}function createHmacSigner(r){return function sign(e,t){checkIsSecretKey(t);e=normalizeInput(e);var n=c.createHmac("sha"+r,t);var i=(n.update(e),n.digest("base64"));return fromBase64(i)}}function createHmacVerifier(r){return function verify(e,t,n){var i=createHmacSigner(r)(e,n);return o(f.from(t),f.from(i))}}function createKeySigner(r){return function sign(e,t){checkIsPrivateKey(t);e=normalizeInput(e);var n=c.createSign("RSA-SHA"+r);var i=(n.update(e),n.sign(t,"base64"));return fromBase64(i)}}function createKeyVerifier(r){return function verify(e,t,n){checkIsPublicKey(n);e=normalizeInput(e);t=toBase64(t);var i=c.createVerify("RSA-SHA"+r);i.update(e);return i.verify(n,t,"base64")}}function createPSSKeySigner(r){return function sign(e,t){checkIsPrivateKey(t);e=normalizeInput(e);var n=c.createSign("RSA-SHA"+r);var i=(n.update(e),n.sign({key:t,padding:c.constants.RSA_PKCS1_PSS_PADDING,saltLength:c.constants.RSA_PSS_SALTLEN_DIGEST},"base64"));return fromBase64(i)}}function createPSSKeyVerifier(r){return function verify(e,t,n){checkIsPublicKey(n);e=normalizeInput(e);t=toBase64(t);var i=c.createVerify("RSA-SHA"+r);i.update(e);return i.verify({key:n,padding:c.constants.RSA_PKCS1_PSS_PADDING,saltLength:c.constants.RSA_PSS_SALTLEN_DIGEST},t,"base64")}}function createECDSASigner(r){var e=createKeySigner(r);return function sign(){var t=e.apply(null,arguments);t=u.derToJose(t,"ES"+r);return t}}function createECDSAVerifer(r){var e=createKeyVerifier(r);return function verify(t,n,i){n=u.joseToDer(n,"ES"+r).toString("base64");var a=e(t,n,i);return a}}function createNoneSigner(){return function sign(){return""}}function createNoneVerifier(){return function verify(r,e){return""===e}}a=function jwa(r){var e={hs:createHmacSigner,rs:createKeySigner,ps:createPSSKeySigner,es:createECDSASigner,none:createNoneSigner};var t={hs:createHmacVerifier,rs:createKeyVerifier,ps:createPSSKeyVerifier,es:createECDSAVerifer,none:createNoneVerifier};var n=r.match(/^(RS|PS|ES|HS)(256|384|512)$|^(none)$/);if(!n)throw typeError(S,r);var i=(n[1]||n[3]).toLowerCase();var a=n[2];return{sign:e[i](a),verify:t[i](a)}};var m=a;export default m;

